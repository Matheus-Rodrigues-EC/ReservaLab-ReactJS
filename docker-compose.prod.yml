services:
  # Frontend - React com Nginx (Produção)
  reservalab-frontend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: reservalab-frontend-prod
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
    networks:
      - reservalab-network
    depends_on:
      - reservalab-backend
    restart: unless-stopped

  # Backend - Conecte com seu container backend existente
  reservalab-backend:
    # Substitua pela sua imagem de produção do backend
    image: reservalab-backend:prod
    container_name: reservalab-backend-prod
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@reservalab-postgres:5432/reservalab
    networks:
      - reservalab-network
    depends_on:
      reservalab-postgres:
        condition: service_healthy
    restart: unless-stopped

  # Banco de dados PostgreSQL
  reservalab-postgres:
    image: postgres:17.3
    container_name: reservalab-postgres-prod
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=reservalab
    ports:
      - "5432:5432"
    volumes:
      - pgdata_prod:/var/lib/postgresql/data
    networks:
      - reservalab-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

# Volumes
volumes:
  pgdata_prod:
    driver: local

# Networks
networks:
  reservalab-network:
    driver: bridge
